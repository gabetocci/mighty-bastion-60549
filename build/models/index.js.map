{"version":3,"sources":["../../models/index.js"],"names":["basename","__filename","env","process","NODE_ENV","config","require","__dirname","db","use_env_variable","sequelize","Sequelize","database","username","password","filter","file","indexOf","slice","forEach","model","name","Object","keys","modelName","associate"],"mappings":"AAAA;;;;;;AAEA;;AACA;;AACA;;;;;;AACA,IAAIA,WAAY,oBAAUC,UAAV,CAAhB;AACA,IAAIC,MAAYC,QAAQD,GAAR,CAAYE,QAAZ,IAAwB,aAAxC;AACA,IAAIC,SAAYC,QAAQC,YAAY,wBAApB,EAA8CL,GAA9C,CAAhB;AACA,IAAIM,KAAY,EAAhB;;AAEA,IAAIH,OAAOI,gBAAX,EAA6B;AAC3B,MAAIC,YAAY,IAAIC,mBAAJ,CAAcR,QAAQD,GAAR,CAAYG,OAAOI,gBAAnB,CAAd,EAAoDJ,MAApD,CAAhB;AACD,CAFD,MAEO;AACL,MAAIK,YAAY,IAAIC,mBAAJ,CAAcN,OAAOO,QAArB,EAA+BP,OAAOQ,QAAtC,EAAgDR,OAAOS,QAAvD,EAAiET,MAAjE,CAAhB;AACD;;AAED,qBAAYE,SAAZ,EACGQ,MADH,CACU,gBAAQ;AACd,SAAQC,KAAKC,OAAL,CAAa,GAAb,MAAsB,CAAvB,IAA8BD,SAAShB,QAAvC,IAAqDgB,KAAKE,KAAL,CAAW,CAAC,CAAZ,MAAmB,KAA/E;AACD,CAHH,EAIGC,OAJH,CAIW,gBAAQ;AACf,MAAIC,QAAQV,UAAU,QAAV,EAAoB,gBAAKH,SAAL,EAAgBS,IAAhB,CAApB,CAAZ;AACAR,KAAGY,MAAMC,IAAT,IAAiBD,KAAjB;AACD,CAPH;;AASAE,OAAOC,IAAP,CAAYf,EAAZ,EAAgBW,OAAhB,CAAwB,qBAAa;AACnC,MAAIX,GAAGgB,SAAH,EAAcC,SAAlB,EAA6B;AAC3BjB,OAAGgB,SAAH,EAAcC,SAAd,CAAwBjB,EAAxB;AACD;AACF,CAJD;;AAMAA,GAAGE,SAAH,GAAeA,SAAf;AACAF,GAAGG,SAAH,GAAeA,mBAAf;;kBAEeH,E","file":"index.js","sourcesContent":["'use strict';\r\n\r\nimport { readdirSync } from 'fs';\r\nimport { basename as _basename, join } from 'path';\r\nimport Sequelize from 'sequelize';\r\nvar basename  = _basename(__filename);\r\nvar env       = process.env.NODE_ENV || 'development';\r\nvar config    = require(__dirname + '/../config/config.json')[env];\r\nvar db        = {};\r\n\r\nif (config.use_env_variable) {\r\n  var sequelize = new Sequelize(process.env[config.use_env_variable], config);\r\n} else {\r\n  var sequelize = new Sequelize(config.database, config.username, config.password, config);\r\n}\r\n\r\nreaddirSync(__dirname)\r\n  .filter(file => {\r\n    return (file.indexOf('.') !== 0) && (file !== basename) && (file.slice(-3) === '.js');\r\n  })\r\n  .forEach(file => {\r\n    var model = sequelize['import'](join(__dirname, file));\r\n    db[model.name] = model;\r\n  });\r\n\r\nObject.keys(db).forEach(modelName => {\r\n  if (db[modelName].associate) {\r\n    db[modelName].associate(db);\r\n  }\r\n});\r\n\r\ndb.sequelize = sequelize;\r\ndb.Sequelize = Sequelize;\r\n\r\nexport default db;\r\n"]}