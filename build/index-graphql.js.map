{"version":3,"sources":["../index-graphql.js"],"names":["express","require","bodyParser","graphqlExpress","graphiqlExpress","makeExecutableSchema","resolvers","typeDefs","schema","app","use","json","endpointURL","listen","console","log"],"mappings":";;AAAA,IAAMA,UAAUC,QAAQ,SAAR,CAAhB;AACA,IAAMC,aAAaD,QAAQ,aAAR,CAAnB;;eAC4CA,QAAQ,uBAAR,C;IAApCE,c,YAAAA,c;IAAgBC,e,YAAAA,e;;gBACSH,QAAQ,eAAR,C;IAAzBI,oB,aAAAA,oB;;AAER;;;AACA,IAAMC,YAAYL,QAAQ,gBAAR,CAAlB;AACA,IAAMM,WAAWN,QAAQ,aAAR,CAAjB;AACA,IAAMO,SAASH,qBAAqB;AAClCE,oBADkC;AAElCD;AAFkC,CAArB,CAAf;;AAKA;AACA,IAAMG,MAAMT,SAAZ;;AAEA;AACAS,IAAIC,GAAJ,CAAQ,UAAR,EAAoBR,WAAWS,IAAX,EAApB,EAAuCR,eAAe,EAAEK,cAAF,EAAf,CAAvC;;AAEA;AACAC,IAAIC,GAAJ,CAAQ,WAAR,EAAqBN,gBAAgB,EAAEQ,aAAa,UAAf,EAAhB,CAArB;;AAEA;AACAH,IAAII,MAAJ,CAAW,IAAX,EAAiB,YAAM;AACrBC,UAAQC,GAAR,CAAY,sDAAZ;AACD,CAFD","file":"index-graphql.js","sourcesContent":["const express = require('express');\r\nconst bodyParser = require('body-parser');\r\nconst { graphqlExpress, graphiqlExpress } = require('apollo-server-express');\r\nconst { makeExecutableSchema } = require('graphql-tools');\r\n\r\n// Put together a schema\r\nconst resolvers = require('./resolvers.js')\r\nconst typeDefs = require('./schema.js')\r\nconst schema = makeExecutableSchema({\r\n  typeDefs,\r\n  resolvers,\r\n});\r\n\r\n// Initialize the app\r\nconst app = express();\r\n\r\n// The GraphQL endpoint\r\napp.use('/graphql', bodyParser.json(), graphqlExpress({ schema }));\r\n\r\n// GraphiQL, a visual editor for queries\r\napp.use('/graphiql', graphiqlExpress({ endpointURL: '/graphql' }));\r\n\r\n// Start the server\r\napp.listen(3000, () => {\r\n  console.log('Go to http://localhost:3000/graphiql to run queries!');\r\n});"]}